{"version":3,"sources":["modal.js"],"names":["id","heyModal","body","elem","target","events","open","Event","close","content","title","visibleClass","bodyOverflowClass","init","this","document","querySelector","setTarget","checkTarget","build","removeTarget","setMaxHeight","bindEvents","on","event","action","comp","wrapper","addEventListener","c","createElement","classList","add","setAttribute","dialog","header","style","overflow","closeBtn","appendChild","populate","self","el","domElem","innerHTML","hasAttribute","getAttribute","indexOf","hasTarget","nodeType","Error","e","console","log","remove","wrapperStyles","getComputedStyle","headerHeight","offsetHeight","maxHeight","paddingTop","_this","preventDefault","bind","stopPropagation","keyCode","shiftKey","firstFocusable","activeElement","lastFocusable","focus","setPageScroll","marginRight","measureScrollbar","setLastFocusedElem","setFocus","dispatchEvent","elemsWithFocus","querySelectorAll","length","lastFocused","_this2","closeOver","removeEventListener","scrollable","arguments","undefined","width","measure","height","position","top","offsetWidth","clientWidth","removeChild","window","options","newModal","Object","assign","create","myModal","lesserModal"],"mappings":"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","file":"modal.min.js","sourcesContent":["(() => {\n  let id = 0;\n\n  const heyModal = {\n    body: null,\n    elem: null,\n    target: null,\n    events: {\n      open: new Event('heyOpen'),\n      close: new Event('heyClose'),\n    },\n    content: {\n      title: null,\n      body: null,\n    },\n    visibleClass: 'modal--is-visible',\n    bodyOverflowClass: 'modal-body-no-scroll',\n    init () {\n      this.body = document.querySelector('body');\n      this.setTarget();\n\n      this.id = id;\n\n      // Only proceed if we have a valid target\n      if (this.checkTarget()) {\n        this.build();\n        this.removeTarget();\n        this.setMaxHeight();\n        this.bindEvents();\n      }\n    },\n    on (event, action) {\n      this.comp.wrapper.addEventListener(event, action);\n    },\n    build () {\n      const c = {};\n\n      // Wrapper\n      c.wrapper = document.createElement('div');\n      c.wrapper.classList.add('modal');\n      c.wrapper.setAttribute('aria-hidden', 'true');\n\n      // Dialog\n      c.dialog = document.createElement('div');\n      c.dialog.classList.add('modal__dialog');\n      c.dialog.setAttribute('role', 'dialog');\n      c.dialog.setAttribute('aria-labelledby', `modal__title-${this.id}`);\n\n      // Header\n      c.header = document.createElement('div');\n      c.header.classList.add('modal__header');\n\n      // Title\n      c.title = document.createElement('h3');\n      c.title.classList.add('modal__title');\n      c.title.id = `modal__title-${this.id}`;\n\n      // Body\n      c.body = document.createElement('div');\n      c.body.classList.add('modal__body');\n      c.body.style.overflow = 'auto';\n\n      // Close button\n      c.closeBtn = document.createElement('button');\n      c.closeBtn.classList.add('modal__close');\n      c.closeBtn.setAttribute('type', 'button');\n      c.closeBtn.setAttribute('aria-label', 'Close');\n\n      // Build modal\n      c.header.appendChild(c.title);\n      c.header.appendChild(c.closeBtn);\n      c.dialog.appendChild(c.header);\n      c.dialog.appendChild(c.body);\n      c.wrapper.appendChild(c.dialog);\n\n      this.comp = c;\n\n      // Update content\n      this.populate();\n\n      // Add to DOM\n      this.body.appendChild(c.wrapper);\n    },\n    populate() {\n      const self = this;\n\n      // TODO could probably be re-written to accommodate mix of JS/non-js content, or just made simpler\n      for (const el in this.content) {\n        if (!this.content[el]) {\n          const domElem = self.target.querySelector(`[data-hey-${el}]`);\n\n          if (domElem) {\n            self.content[el] = domElem.innerHTML;\n          }\n        }\n\n        this.comp[el].innerHTML = this.content[el];\n      }\n    },\n    setTarget() {\n      // If a data attribute is set with a target\n      if (this.elem.hasAttribute('data-hey')) {\n        this.target = document.querySelector(this.elem.getAttribute('data-hey'));\n      } else if (this.elem.hasAttribute('href') && this.elem.getAttribute('href').indexOf('#') >= 0) {\n        // Otherwise try to use the ID in the link\n        this.target = document.querySelector(this.elem.getAttribute('href'));\n      }\n    },\n    checkTarget() {\n      let hasTarget;\n\n      try {\n        // Is the target a valid node\n        if (!(this.target && this.target.nodeType)) {\n          hasTarget = false;\n          throw new Error('No modal target given.');\n        } else {\n          hasTarget = true;\n        }\n      } catch(e) {\n        console.log(e);\n      }\n\n      return hasTarget;\n    },\n    // Remove the original target\n    removeTarget() {\n      this.target.remove();\n    },\n    setMaxHeight() {\n      const wrapperStyles = getComputedStyle(this.comp.wrapper);\n      const headerHeight = this.comp.header.offsetHeight;\n      const maxHeight = `calc(100vh - (${wrapperStyles.paddingTop} + ${wrapperStyles.paddingTop}) - ${headerHeight}px)`;\n\n      this.comp.body.style.maxHeight = maxHeight;\n    },\n    bindEvents() {\n      // Open on target click\n      this.elem.addEventListener('click', e => {\n        e.preventDefault();\n        this.open();\n      });\n\n      // Close events on wrapper/close button\n      this.comp.wrapper.addEventListener('click', this.close.bind(this));\n      this.comp.closeBtn.addEventListener('click', this.close.bind(this));\n\n      // Clicking inner modal components shouldn't close the modal\n      this.comp.dialog.addEventListener('click', (e) => {\n        e.stopPropagation();\n      });\n\n      // Keybindings\n      this.comp.wrapper.addEventListener('keydown', e => {\n        switch (e.keyCode) {\n          // Escape\n          case 27:\n            this.close();\n            break;\n          // Tab\n          case 9:\n            // If we're tabbing backwards\n            if (e.shiftKey) {\n              // If (pre-event) we were focused on the first element...\n              if (this.firstFocusable == document.activeElement) {\n                e.preventDefault();\n                // ... send us backwards to the last in the dialog\n                this.lastFocusable.focus();\n              }\n              // If (pre-event) we were focused on the last element...\n            } else if (this.lastFocusable == document.activeElement) {\n              e.preventDefault();\n              // ... send us to the first in the dialog\n              this.firstFocusable.focus();\n            }\n            break;\n          default:\n            break;\n        }\n      });\n    },\n    open() {\n      this.comp.wrapper.classList.add(this.visibleClass);\n      this.setPageScroll(false);\n      this.body.style.marginRight = this.measureScrollbar();\n      this.comp.wrapper.setAttribute('aria-hidden', 'false');\n      this.setLastFocusedElem();\n      this.setFocus();\n      this.comp.wrapper.dispatchEvent(this.events.open);\n    },\n    setFocus() {\n      // All elements in the dialog that can receive focus\n      const elemsWithFocus = this.comp.dialog.querySelectorAll('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]');\n\n      this.firstFocusable = elemsWithFocus[0];\n      this.lastFocusable = elemsWithFocus[elemsWithFocus.length - 1];\n\n      // Focus on first element, probably the close button\n      this.firstFocusable.focus();\n    },\n    setLastFocusedElem() {\n      this.lastFocused = document.activeElement;\n    },\n    close() {\n      this.comp.wrapper.classList.remove(this.visibleClass);\n      this.lastFocused.focus();\n\n      const closeOver = () => {\n        this.setPageScroll(true);\n        this.body.style.marginRight = 0;\n        this.comp.wrapper.removeEventListener('transitionend', closeOver);\n        this.comp.wrapper.setAttribute('aria-hidden', 'true');\n        this.comp.wrapper.dispatchEvent(this.events.close);\n      };\n\n      this.comp.wrapper.addEventListener('transitionend', closeOver);\n    },\n    setPageScroll(scrollable = false) {\n      if (scrollable) {\n        this.body.classList.remove(this.bodyOverflowClass);\n      } else {\n        this.body.classList.add(this.bodyOverflowClass);\n      }\n    },\n    measureScrollbar() {\n      let width;\n\n      // Create box to measure scrollbar\n      const measure = document.createElement('div');\n\n      // Make sure it triggers overflow\n      measure.style.width = 100;\n      measure.style.height = 100;\n      measure.style.overflow = 'scroll';\n      measure.style.position = 'absolute';\n      measure.style.top = -9999;\n\n      // Add the measure element\n      this.body.appendChild(measure);\n\n      // Measure the difference between with/without the scrollbar\n      width = measure.offsetWidth - measure.clientWidth;\n\n      // Remove from DOM\n      this.body.removeChild(measure);\n\n      // Return our best guess at the width\n      return width;\n    },\n  };\n\n  window.heyModal = (elem, options) => {\n    id += 1;\n\n    // Create a new modal object\n    const newModal = Object.assign(Object.create(heyModal), {\n      elem,\n    }, options);\n\n    // Run initialisation\n    newModal.init();\n\n    // Return our new modal\n    return newModal;\n  }\n})();\n\nconst myModal = heyModal(document.querySelector('.modal-trigger'));\n\nconsole.log(myModal);\n\nconst lesserModal = heyModal(document.querySelector('.less-great-modal-trigger'), {\n  content: {\n    title: 'Lesser title override',\n  },\n});\n\nconsole.log(lesserModal);\n\n// myModal.on('heyOpen', () => {\n//   console.log('opening!');\n// });\n\n// myModal.on('heyClose', () => {\n//   console.log('closing!');\n// });\n"]}